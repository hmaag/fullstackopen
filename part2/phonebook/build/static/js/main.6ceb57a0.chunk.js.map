{"version":3,"sources":["components/Person.js","components/Phonebook.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","name","number","Phonebook","persons","filter","removePerson","length","toLowerCase","includes","map","type","value","id","onClick","PersonForm","props","onSubmit","addPerson","newName","onChange","handleNameChange","newNumber","handleNumberChange","Filter","handleFilter","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","allPersons","event","target","preventDefault","personObject","personToUpdate","find","window","confirm","returnedPerson","setTimeout","catch","error","n","concat","parseInt","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ceb57a0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person }) => {\n    return (\n\t\t<>\n\t\t\t{person.name} {person.number}\n\t\t</>\n\t)\t\n  }\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Phonebook = ( {persons, filter, removePerson} ) => {\n    const results = filter.length === 0 ? persons : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n    return (\n        results.map(person => \n            <div key={person.id}>\n                <Person person={person} name={person.name} number={person.number}/> \n                <button type='button' value={person.id} onClick={removePerson}>delete</button>\n                <br />\n            </div>    \n        )\n    )\n}\n\nexport default Phonebook","import React from 'react'\n\nconst PersonForm = ( props ) => {\n    return (\n        <form onSubmit={props.addPerson}>\n        <div>\n          <label>name </label>\n          <input value={props.newName} onChange={props.handleNameChange} />\n        </div>\n        <div>\n            <label>number </label>\n            <input type='tel' value={props.newNumber} onChange={props.handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = ( {filter, handleFilter} ) => {\n    return (\n        <>\n            <label>filter names with : </label>\n            <input value={filter} onChange={handleFilter}/>\n        </>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n  \nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n  \nconst update = (person, newObject) => {\n    const request = axios.put(`${baseUrl}/${person.id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (person) => {\n    const request = axios.delete(`${baseUrl}/${person.id}`)\n    return request.then(response => response) // returning for response codes\n}\n  \nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Phonebook from './components/Phonebook'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(allPersons => {\n        setPersons(allPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.map(person => person.name).includes(newName)) {\n      const personToUpdate = persons.find(person => person.name === newName)\n      const id = personToUpdate.id\n      if (window.confirm(`${personToUpdate.name} is already added to the phonebook. Replace the old number with a new one?`)) {\n        personObject['id'] = id // make sure we send the right id over\n        personService\n        .update(personToUpdate, personObject)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n          setMessage(`${personToUpdate.name}'s phone number has been updated`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n        })\n        .catch(error => {\n          setMessage(`${personToUpdate.name} has already been removed from the phonebook`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n          setPersons(persons.filter(n => n.id !== id))\n        })\n      }\n      return\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n      setMessage(`${newName} has been added to the phonebook`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n    }\n  }\n\n  const removePerson = (event) => {\n    event.preventDefault()\n    const id = parseInt(event.target.value)\n    const personToRemove = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${personToRemove.name}`)) {\n      personService\n      .remove(personToRemove).then(() => {\n        setPersons(persons.filter(n => n.id !== id))\n        setMessage(`${personToRemove.name} has been removed from the phonebook`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n      }) //id is one more than person's idx in array\n      .catch(error => {\n        setMessage(`${personToRemove.name} has already been removed from the phonebook`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n        setPersons(persons.filter(n => n.id !== id))\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>phonebook</h2>\n        <Notification message={message} />\n        <Filter \n          filter={filter} \n          handleFilter={handleFilter} \n        />\n      <br />\n      <h2>add a new person</h2>\n        <PersonForm \n          addPerson={addPerson} \n          newName={newName} \n          handleNameChange={handleNameChange} \n          newNumber={newNumber} \n          handleNumberChange={handleNumberChange}\n        />\n      <h2>numbers</h2>\n        <Phonebook \n          persons={persons} \n          filter={filter}\n          removePerson={removePerson}\n        />\n    </div>\n    \n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}